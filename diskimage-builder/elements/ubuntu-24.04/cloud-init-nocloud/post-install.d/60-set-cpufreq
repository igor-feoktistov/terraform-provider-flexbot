#!/bin/bash

if [ ${DIB_DEBUG_TRACE:-1} -gt 0 ]; then
    set -x
fi
set -eu
set -o pipefail

#!/bin/bash

mkdir -p /usr/local/sbin
cat <<EOF > /usr/local/sbin/set-cpufreq
#!/bin/sh
# Set the CPU Frequency Scaling governor to "performance"/"powersave" where available
set -eu

FIRSTCPU=\`cut -f1 -d- /sys/devices/system/cpu/online\`
AVAILABLE="/sys/devices/system/cpu/cpu\$FIRSTCPU/cpufreq/scaling_available_governors"
DOWN_FACTOR="/sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor"

[ -f \$AVAILABLE ] || exit 0

read governors < \$AVAILABLE
case \$governors in
        *performance*)
                GOVERNOR="performance"
                break
                ;;
        *powersave*)
                GOVERNOR="powersave"
                break
                ;;
        *)
                exit 0
                ;;
esac

[ -n "\${GOVERNOR:-}" ] || exit 0

echo "Setting \$GOVERNOR scheduler for all CPUs"

for CPUFREQ in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
do
        [ -f \$CPUFREQ ] || continue
        echo -n \$GOVERNOR > \$CPUFREQ
done
EOF

chmod 755 /usr/local/sbin/set-cpufreq

cat <<EOF > /lib/systemd/system/set-cpufreq.service
[Unit]
Description=Service to setup CPU freq governor on startup
After=local-fs.target

[Service]
Type=oneshot
Restart=no
ExecStart=/usr/local/sbin/set-cpufreq

[Install]
WantedBy=default.target
EOF

systemctl enable set-cpufreq
